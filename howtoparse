pseudocode:

struct entityset {
	char *location;
	int length;
	char *replacement;
}

main {
entityset entities[15];
int entityptr=0;

checkforusernames()
checkforhashtags()
checkforlinks()
shortenstring()
return shortstring;

int checkforusernames(string) {

	if !findlocationofusernameuniquestring return
	else determineusername()
	return checkforusernames();
}

int checkforusernames(string) {

	if !findlocationofhashtaguniquestring return
	else determinehashtag()
	return checkforhashtags();
}

int checkforlinks(string) {

	if !findlocationoflinkstring return
	else determinelink()
	return checkforlinks();
}

}

username string is 64 chars w/o usernames, class is (30+len(username w/o @)) chars deep in the string. 

nned to fix the whoel NULLing thing in parseusernames, though

BOOOMMMMMMMMMM IT RETURNS THE POINTER TO THE LAST USED STRUCT. THE OUTER LOOP HAS TO DO THE TAIL CUTTING ANYWAY, SINCE OTHER FUNCTIONS FOLLOW FOR LINKS AND USERNAMES, pass the last used object as an extra arg? coooool