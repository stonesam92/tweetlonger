/*
 *     Generated by class-dump 3.3.3 (64 bit).
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2010 by Steve Nygard.
 */

#import "NSObject.h"

#import "NSCoding-Protocol.h"

@class ABHTTPRequest, NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, TwitterApplePushDestination, TwitterConfiguration, TwitterDirectMessagesConversationManager, TwitterRepliesStream, TwitterScribe, TwitterSettings, TwitterTimelineStream, TwitterTrendLocation, TwitterUser;

@interface TwitterAccount : NSObject <NSCoding>
{
    id <TwitterAccountDelegate> delegate;
    NSString *username;
    NSString *password;
    NSString *oAuthToken;
    NSString *oAuthTokenSecret;
    NSMutableDictionary *usersByID;
    NSMutableDictionary *usersByUsername;
    NSMutableDictionary *statusesByID;
    NSMutableDictionary *directMessagesByID;
    NSMutableSet *friendIDs;
    NSMutableSet *blockIDs;
    NSMutableSet *ignoreRetweetsIDs;
    NSString *apiRoot;
    NSString *searchAPIRoot;
    BOOL needToSavePassword;
    TwitterUser *user;
    TwitterTimelineStream *timelineStream;
    TwitterRepliesStream *repliesStream;
    TwitterDirectMessagesConversationManager *directMessagesManager;
    unsigned int notificationOptions;
    NSDate *freshTweets;
    NSDate *freshMentions;
    NSDate *freshMessages;
    NSDate *freshSearches;
    NSMutableArray *savedSearches;
    NSMutableArray *lists;
    NSMutableArray *listSubscriptions;
    NSArray *_followingLists;
    NSString *localTrendGPSToken;
    NSDate *lastTrendUpdate;
    NSArray *trends;
    TwitterTrendLocation *currentTrendLocation;
    NSArray *topTweets;
    NSArray *sulCategories;
    NSMutableArray *drafts;
    NSMutableArray *outbox;
    TwitterSettings *settings;
    TwitterConfiguration *twitterConfiguration;
    TwitterApplePushDestination *applePushDestination;
    BOOL disableUserStream;
    ABHTTPRequest *userStream;
    BOOL droppedLastUserStreamConnection;
    float userStreamReconnectDelay;
    NSDate *lastUserStreamEvent;
    int scribeSpinLock;
    TwitterScribe *scribe;
    struct {
        unsigned int staleUser:1;
        unsigned int staleSavedSearches:1;
        unsigned int staleLists:1;
        unsigned int loadingUser:1;
        unsigned int loadingTrends:1;
        unsigned int loadingTopTweets:1;
        unsigned int loadingSavedSearches:1;
        unsigned int loadingLists:1;
        unsigned int loadingListSubscriptions:1;
        unsigned int loadingSULCategories:1;
        unsigned int loadingXAuthTokens:1;
        unsigned int lastGeotaggingState:1;
    } _flags;
}

- (id)init;
- (id)initWithUsername:(id)arg1 password:(id)arg2 apiRoot:(id)arg3 searchAPIRoot:(id)arg4;
- (id)initWithUsername:(id)arg1 password:(id)arg2;
- (id)autosaveName;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (void)saveStreams;
- (id)keychainService;
@property(nonatomic) unsigned int notificationOptions; // @synthesize notificationOptions;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic) TwitterScribe *scribe;
@property(readonly, nonatomic) TwitterConfiguration *twitterConfiguration; // @synthesize twitterConfiguration;
- (void)refreshTwitterConfiguration;
- (void)didReceiveNewConfigurationSettings:(id)arg1 info:(id)arg2;
- (void)dealloc;
- (BOOL)hasPassword;
- (BOOL)isConnectedToUserStream;
- (void)refreshTimelines;
- (void)refresh;
- (void)refreshForced:(BOOL)arg1;
- (void)refreshSettings;
- (void)didLoadSettings:(id)arg1 info:(id)arg2;
- (void)refreshDMs;
- (void)refreshBlocks;
- (void)didReceiveBlocks:(id)arg1 info:(id)arg2;
- (void)refreshIgnoreRetweets;
- (void)didReceiveIgnoreRetweets:(id)arg1 info:(id)arg2;
- (void)setPassword:(id)arg1;
@property(copy, nonatomic) NSString *oAuthTokenSecret; // @synthesize oAuthTokenSecret;
- (int)compare:(id)arg1;
@property(retain, nonatomic) TwitterUser *user; // @synthesize user;
@property(nonatomic) BOOL lastGeotaggingState;
- (void)_postAccountDidUpdateNotification;
- (void)myUserResponse:(id)arg1 info:(id)arg2;
- (void)myUserDidUpdate:(id)arg1;
- (id)request:(id)arg1;
- (id)authenticatedRequest:(id)arg1;
- (void)verifyCredentials:(id)arg1;
- (void)requestUserWithID:(id)arg1 callback:(id)arg2;
- (void)unauthenticatedUserForIDResponse:(id)arg1 info:(id)arg2;
- (void)authenticatedUserForIDResponse:(id)arg1 info:(id)arg2;
- (void)requestUserWithUsername:(id)arg1 callback:(id)arg2;
- (void)unauthenticatedUserForUsernameResponse:(id)arg1 info:(id)arg2;
- (void)authenticatedUserForUsernameResponse:(id)arg1 info:(id)arg2;
- (void)findUsers:(id)arg1 callback:(id)arg2;
- (void)findUsersResponse:(id)arg1 info:(id)arg2;
- (void)requestStatusWithID:(id)arg1 callback:(id)arg2;
- (void)unauthenticatedStatusResponse:(id)arg1 info:(id)arg2;
- (void)authenticatedStatusResponse:(id)arg1 info:(id)arg2;
- (id)timelineStream;
- (id)repliesStream;
- (id)aggregateTimelineAndMentionsStream;
- (id)directMessagesManager;
- (BOOL)isAuthorOfStatus:(id)arg1;
- (BOOL)isAuthorOfDirectMessage:(id)arg1;
- (BOOL)isMentionedInStatus:(id)arg1;
- (void)favoriteStatus:(id)arg1;
- (void)addStatusToFavorites:(id)arg1;
- (void)unfavoriteStatus:(id)arg1;
- (void)removeStatusFromFavorites:(id)arg1;
- (BOOL)isFavoriteStatus:(id)arg1;
- (void)deleteStatus:(id)arg1;
- (void)deleteDirectMessage:(id)arg1;
- (void)deleteDirectMessageConversation:(id)arg1;
- (void)deleteStatusResponse:(id)arg1 info:(id)arg2;
- (BOOL)hasFreshTweets;
- (BOOL)hasFreshMentions;
- (BOOL)hasFreshMessages;
- (BOOL)hasFreshSearches;
- (BOOL)hasAnythingUnread;
- (BOOL)hasFreshAnythingApplicableToStatusItem;
- (BOOL)hasFreshAnythingApplicableToDockBadge;
- (void)markAllAsRead;
- (void)noteFreshTweets;
- (void)noteFreshMentions;
- (void)noteFreshMessages;
- (void)noteFreshSearches;
- (void)noteDirectMessagesUnreadStateDidChange;
- (id)unNotifiedStatuses:(id)arg1;
- (id)unNotifiedMessages;
- (void)somethingDidUpdate:(id)arg1;
- (void)setDeviceNotifications:(BOOL)arg1 forUser:(id)arg2;
- (void)retweet:(id)arg1 callback:(id)arg2;
- (id)drafts;
- (void)saveDraft:(id)arg1;
- (void)removeDraft:(id)arg1;
- (void)_processOutbox;
- (void)didSend:(id)arg1 directMessage:(id)arg2;
- (void)didSend:(id)arg1;
- (void)send:(id)arg1;
- (void)sendDirectMessage:(id)arg1 to:(id)arg2 callback:(id)arg3;
- (void)didMessage:(id)arg1 info:(id)arg2;
- (void)_errorPostingComposition:(id)arg1 message:(id)arg2 error:(id)arg3;
- (void)error:(id)arg1 shorteningURLsForComposition:(id)arg2;
- (void)error:(id)arg1 uploadingAttachment:(id)arg2 forComposition:(id)arg3;
- (void)sendCompletedComposition:(id)arg1;
- (void)didSendCompletedComposition:(id)arg1 info:(id)arg2;
- (BOOL)isDuckie;
@property(nonatomic) BOOL disableUserStream; // @synthesize disableUserStream;
@property(retain, nonatomic) NSDate *lastUserStreamEvent; // @synthesize lastUserStreamEvent;
@property(retain, nonatomic) NSMutableSet *blockIDs; // @synthesize blockIDs;
@property(retain, nonatomic) NSMutableSet *friendIDs; // @synthesize friendIDs;
@property(retain, nonatomic) TwitterApplePushDestination *applePushDestination; // @synthesize applePushDestination;
@property(retain, nonatomic) TwitterSettings *settings; // @synthesize settings;
@property(readonly, nonatomic) NSString *searchAPIRoot; // @synthesize searchAPIRoot;
@property(readonly, nonatomic) NSString *apiRoot; // @synthesize apiRoot;
@property(retain, nonatomic) NSString *oAuthToken; // @synthesize oAuthToken;
@property(readonly, nonatomic) NSString *password; // @synthesize password;
@property(readonly, nonatomic) NSString *username; // @synthesize username;
@property(nonatomic) id delegate; // @synthesize delegate;

@end

